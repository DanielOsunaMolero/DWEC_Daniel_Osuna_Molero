/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./js/Asignatura.js":
/*!**************************!*\
  !*** ./js/Asignatura.js ***!
  \**************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Asignatura: () => (/* binding */ Asignatura)\n/* harmony export */ });\n/* harmony import */ var _Estudiante_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Estudiante.js */ \"./js/Estudiante.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n\n\n/**\r\n * Clase que representa una asignatura.\r\n * @class\r\n */\nvar Asignatura = /*#__PURE__*/function () {\n  /**\r\n   * Crea una instancia de Asignatura.\r\n   * @param {string} nombre - Nombre de la asignatura.\r\n   */\n  function Asignatura(nombre) {\n    _classCallCheck(this, Asignatura);\n    this.nombre = nombre;\n    this.listaEstudiantes = [];\n    this.calificaciones = [];\n  }\n\n  /**\r\n   * Agrega un estudiante a la asignatura e inicializa su registro de calificaciones.\r\n   * @param {Estudiante} estudiante - Estudiante a agregar.\r\n   */\n  return _createClass(Asignatura, [{\n    key: \"agregarEstudiante\",\n    value: function agregarEstudiante(estudiante) {\n      if (!estudiante || !estudiante.nombre) {\n        console.error(\"El estudiante no tiene un nombre válido.\");\n        return;\n      }\n      if (!this.listaEstudiantes.some(function (e) {\n        return e.id === estudiante.id;\n      })) {\n        this.listaEstudiantes.push(estudiante);\n        this.calificaciones.push({\n          estudiante: estudiante,\n          calificaciones: []\n        });\n        console.log(\"Estudiante \".concat(estudiante.nombre, \" agregado a la asignatura \").concat(this.nombre, \".\"));\n      } else {\n        console.log(\"El estudiante \".concat(estudiante.nombre, \" ya est\\xE1 matriculado en \").concat(this.nombre, \".\"));\n      }\n    }\n\n    /**\r\n     * Asigna una nota a un estudiante en la asignatura.\r\n     * @param {string} nombreEstudiante - Nombre del estudiante al que asignar la nota.\r\n     * @param {number} nota - Nota a asignar (valor entre 0 y 10).\r\n     * @param {ListaEstudiantes} listaEstudiantesObj - Objeto que gestiona la lista de estudiantes.\r\n     * @throws {Error} Si el estudiante no está matriculado en la asignatura o la nota es inválida.\r\n     */\n  }, {\n    key: \"asignarNota\",\n    value: function asignarNota(nombreEstudiante, nota, listaEstudiantesObj) {\n      try {\n        var estudiante = listaEstudiantesObj.buscarEstudiantePorNombre(nombreEstudiante);\n        if (!estudiante) throw new Error(\"Estudiante \".concat(nombreEstudiante, \" no encontrado.\"));\n        if (!this.listaEstudiantes.some(function (e) {\n          return e.id === estudiante.id;\n        })) {\n          throw new Error(\"El estudiante \".concat(estudiante.nombre, \" no est\\xE1 matriculado en \").concat(this.nombre, \".\"));\n        }\n        if (isNaN(nota) || nota < 0 || nota > 10) {\n          throw new Error(\"Nota inválida. Debe estar entre 0 y 10.\");\n        }\n        var registro = this.calificaciones.find(function (c) {\n          return c.estudiante.id === estudiante.id;\n        });\n        registro.calificaciones.push(nota);\n        console.log(\"Nota \".concat(nota, \" asignada a \").concat(estudiante.nombre, \" en \").concat(this.nombre, \".\"));\n      } catch (error) {\n        console.error(\"Error al asignar nota:\", error.message);\n      }\n    }\n\n    /**\r\n     * Obtiene las notas de un estudiante en la asignatura.\r\n     * @param {Estudiante} estudiante - Estudiante cuyas notas se desean obtener.\r\n     * @returns {Array} Lista de calificaciones del estudiante.\r\n     */\n  }, {\n    key: \"obtenerNotas\",\n    value: function obtenerNotas(estudiante) {\n      var registro = this.calificaciones.find(function (c) {\n        return c.estudiante.id === estudiante.id;\n      });\n      return registro ? registro.calificaciones : [];\n    }\n\n    /**\r\n     * Calcula el promedio de todas las calificaciones de la asignatura.\r\n     * @returns {string} Promedio de las calificaciones o mensaje si no hay calificaciones.\r\n     */\n  }, {\n    key: \"calcularPromedio\",\n    value: function calcularPromedio() {\n      var todasLasNotas = this.calificaciones.flatMap(function (c) {\n        return c.calificaciones;\n      });\n      return todasLasNotas.length ? (todasLasNotas.reduce(function (sum, val) {\n        return sum + val;\n      }, 0) / todasLasNotas.length).toFixed(2) : \"No hay calificaciones disponibles.\";\n    }\n\n    /**\r\n     * Muestra en consola los estudiantes matriculados en la asignatura.\r\n     */\n  }, {\n    key: \"mostrarEstudiantes\",\n    value: function mostrarEstudiantes() {\n      console.log(\"Estudiantes matriculados en \".concat(this.nombre, \":\"));\n      this.listaEstudiantes.forEach(function (est) {\n        return console.log(\"- \".concat(est.nombre));\n      });\n    }\n\n    /**\r\n     * Elimina un estudiante de la asignatura y sus calificaciones.\r\n     * @param {Estudiante} estudiante - Estudiante a eliminar.\r\n     */\n  }, {\n    key: \"eliminarEstudiante\",\n    value: function eliminarEstudiante(estudiante) {\n      this.listaEstudiantes = this.listaEstudiantes.filter(function (e) {\n        return e.id !== estudiante.id;\n      });\n      this.calificaciones = this.calificaciones.filter(function (c) {\n        return c.estudiante.id !== estudiante.id;\n      });\n      console.log(\"Estudiante \".concat(estudiante.nombre, \" eliminado de la asignatura \").concat(this.nombre, \".\"));\n    }\n\n    /**\r\n     * Devuelve la representación en cadena de la asignatura.\r\n     * @returns {string} Representación en cadena de la asignatura.\r\n     */\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Asignatura: \".concat(this.nombre, \", Estudiantes matriculados: \").concat(this.listaEstudiantes.length);\n    }\n  }]);\n}();\n\n//# sourceURL=webpack://main/./js/Asignatura.js?");

/***/ }),

/***/ "./js/Direccion.js":
/*!*************************!*\
  !*** ./js/Direccion.js ***!
  \*************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Direccion: () => (/* binding */ Direccion)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\r\n * Clase que representa una dirección.\r\n * @class\r\n */\nvar Direccion = /*#__PURE__*/function () {\n  /**\r\n  * Crea una instancia de Direccion.\r\n  * @param {string} calle - Nombre de la calle.\r\n  * @param {number} numero - Número de la dirección.\r\n  * @param {string} piso - Piso o apartamento.\r\n  * @param {string} codPostal - Código postal (5 dígitos).\r\n  * @param {string} provincia - Provincia de la dirección.\r\n  * @param {string} localidad - Localidad de la dirección.\r\n  * @throws {Error} Si el código postal no tiene exactamente 5 dígitos.\r\n  */\n  function Direccion(calle, numero, piso, codPostal, provincia, localidad) {\n    _classCallCheck(this, Direccion);\n    this._calle = calle;\n    this._numero = numero;\n    this._piso = piso;\n    if (!/^\\d{5}$/.test(codPostal)) {\n      throw new Error(\"El código postal debe tener exactamente 5 dígitos.\");\n    }\n    this._codPostal = codPostal;\n    this._provincia = provincia;\n    this._localidad = localidad;\n  }\n\n  /**\r\n   * Devuelve la representación en cadena de la dirección.\r\n   * @returns {string} Representación en cadena de la dirección.\r\n   */\n  return _createClass(Direccion, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this._calle, \", \").concat(this._numero, \", \").concat(this._piso, \", \").concat(this._localidad, \", \").concat(this._provincia, \" (\").concat(this._codPostal, \")\");\n    }\n  }]);\n}();\n\n//# sourceURL=webpack://main/./js/Direccion.js?");

/***/ }),

/***/ "./js/Estudiante.js":
/*!**************************!*\
  !*** ./js/Estudiante.js ***!
  \**************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Estudiante: () => (/* binding */ Estudiante)\n/* harmony export */ });\n/* harmony import */ var _Persona_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Persona.js */ \"./js/Persona.js\");\n/* harmony import */ var _Asignatura_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Asignatura.js */ \"./js/Asignatura.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _superPropGet(t, o, e, r) { var p = _get(_getPrototypeOf(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\nfunction _get() { return _get = \"undefined\" != typeof Reflect && Reflect.get ? Reflect.get.bind() : function (e, t, r) { var p = _superPropBase(e, t); if (p) { var n = Object.getOwnPropertyDescriptor(p, t); return n.get ? n.get.call(arguments.length < 3 ? e : r) : n.value; } }, _get.apply(null, arguments); }\nfunction _superPropBase(t, o) { for (; !{}.hasOwnProperty.call(t, o) && null !== (t = _getPrototypeOf(t));); return t; }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nfunction _classPrivateFieldInitSpec(e, t, a) { _checkPrivateRedeclaration(e, t), t.set(e, a); }\nfunction _checkPrivateRedeclaration(e, t) { if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); }\nfunction _classPrivateFieldGet(s, a) { return s.get(_assertClassBrand(s, a)); }\nfunction _classPrivateFieldSet(s, a, r) { return s.set(_assertClassBrand(s, a), r), r; }\nfunction _assertClassBrand(e, t, n) { if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n; throw new TypeError(\"Private element is not present on this object\"); }\n\n\n\n/**\r\n * Clase que representa a un estudiante.\r\n * @extends Persona\r\n * @class\r\n */\nvar _asignaturas = /*#__PURE__*/new WeakMap();\nvar Estudiante = /*#__PURE__*/function (_Persona) {\n  /**\r\n   * Crea una instancia de Estudiante.\r\n   * @param {number} id - Identificador único del estudiante.\r\n   * @param {string} nombre - Nombre del estudiante.\r\n   * @param {number} edad - Edad del estudiante.\r\n   * @param {Direccion} direccion - Dirección del estudiante.\r\n   */\n  function Estudiante(id, nombre, edad, direccion) {\n    var _this;\n    _classCallCheck(this, Estudiante);\n    _this = _callSuper(this, Estudiante, [id, nombre, edad, direccion]);\n    _classPrivateFieldInitSpec(_this, _asignaturas, void 0);\n    _classPrivateFieldSet(_asignaturas, _this, []);\n    return _this;\n  }\n\n  /**\r\n   * Obtiene las asignaturas en las que el estudiante está matriculado.\r\n   * @returns {Array} Lista de asignaturas.\r\n   */\n  _inherits(Estudiante, _Persona);\n  return _createClass(Estudiante, [{\n    key: \"asignaturas\",\n    get: function get() {\n      return _toConsumableArray(_classPrivateFieldGet(_asignaturas, this));\n    }\n\n    /**\r\n     * Matricula al estudiante en una asignatura.\r\n     * @param {string} nombreAsignatura - Nombre de la asignatura en la que matricular al estudiante.\r\n     * @param {ListaEstudiantes} listaEstudiantes - Objeto que gestiona la lista de estudiantes.\r\n     * @param {Array<Asignatura>} asignaturasDisponibles - Lista de asignaturas disponibles en el sistema.\r\n     * @throws {Error} Si el estudiante ya está matriculado en la asignatura.\r\n     */\n  }, {\n    key: \"matricular\",\n    value: function matricular(nombreAsignatura, listaEstudiantes, asignaturasDisponibles) {\n      try {\n        var asignatura = listaEstudiantes.buscarAsignaturaPorNombre(nombreAsignatura, asignaturasDisponibles);\n        if (!_classPrivateFieldGet(_asignaturas, this).some(function (a) {\n          return a.asignatura === asignatura;\n        })) {\n          _classPrivateFieldGet(_asignaturas, this).push({\n            asignatura: asignatura,\n            fechaMatricula: new Date().toLocaleDateString(\"es-ES\")\n          });\n          asignatura.agregarEstudiante(this);\n          console.log(\"Estudiante \".concat(this.nombre, \" matriculado en \").concat(asignatura.nombre, \".\"));\n        } else {\n          throw new Error(\"El estudiante ya est\\xE1 matriculado en \".concat(asignatura.nombre, \".\"));\n        }\n      } catch (error) {\n        console.error(\"Error en la matriculación:\", error.message);\n      }\n    }\n\n    /**\r\n     * Desmatricula al estudiante de una asignatura.\r\n     * @param {string} nombreAsignatura - Nombre de la asignatura de la que desmatricular al estudiante.\r\n     * @param {ListaEstudiantes} listaEstudiantes - Objeto que gestiona la lista de estudiantes.\r\n     * @param {Array<Asignatura>} asignaturasDisponibles - Lista de asignaturas disponibles en el sistema.\r\n     * @throws {Error} Si el estudiante no está matriculado en la asignatura.\r\n     */\n  }, {\n    key: \"desmatricular\",\n    value: function desmatricular(nombreAsignatura, listaEstudiantes, asignaturasDisponibles) {\n      try {\n        var asignatura = listaEstudiantes.buscarAsignaturaPorNombre(nombreAsignatura, asignaturasDisponibles);\n        var index = _classPrivateFieldGet(_asignaturas, this).findIndex(function (a) {\n          return a.asignatura === asignatura;\n        });\n        if (index !== -1) {\n          _classPrivateFieldGet(_asignaturas, this).splice(index, 1);\n          asignatura.eliminarEstudiante(this);\n          console.log(\"Estudiante \".concat(this.nombre, \" desmatriculado de \").concat(asignatura.nombre, \".\"));\n        } else {\n          throw new Error(\"El estudiante no est\\xE1 matriculado en \".concat(asignatura.nombre, \".\"));\n        }\n      } catch (error) {\n        console.error(\"Error en la desmatriculación:\", error.message);\n      }\n    }\n\n    /**\r\n     * Calcula el promedio de todas las asignaturas en las que el estudiante está matriculado.\r\n     * @returns {string} Promedio de las calificaciones.\r\n     * @throws {Error} Si el estudiante no tiene asignaturas matriculadas o no hay calificaciones.\r\n     */\n  }, {\n    key: \"promedioIndividual\",\n    value: function promedioIndividual() {\n      var _this2 = this;\n      try {\n        if (_classPrivateFieldGet(_asignaturas, this).length === 0) throw new Error(\"El estudiante no tiene asignaturas matriculadas.\");\n        var notas = _classPrivateFieldGet(_asignaturas, this).flatMap(function (a) {\n          return a.asignatura.obtenerNotas(_this2);\n        });\n        if (notas.length === 0) throw new Error(\"No hay calificaciones disponibles.\");\n        var promedio = (notas.reduce(function (sum, val) {\n          return sum + val;\n        }, 0) / notas.length).toFixed(2);\n        return promedio;\n      } catch (error) {\n        console.error(\"Error al calcular promedio:\", error.message);\n      }\n    }\n\n    /**\r\n     * Muestra en consola las asignaturas en las que el estudiante está matriculado.\r\n     */\n  }, {\n    key: \"mostrarAsignaturas\",\n    value: function mostrarAsignaturas() {\n      console.log(\"Asignaturas de \".concat(this.nombre, \":\"));\n      _classPrivateFieldGet(_asignaturas, this).forEach(function (a) {\n        return console.log(\"- \".concat(a.asignatura.nombre));\n      });\n    }\n\n    /**\r\n     * Devuelve la representación en cadena del estudiante.\r\n     * @returns {string} Representación en cadena del estudiante.\r\n     */\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(_superPropGet(Estudiante, \"toString\", this, 3)([]), \", \").concat(_classPrivateFieldGet(_asignaturas, this).length > 0 ? \"Asignaturas matriculadas: \".concat(_classPrivateFieldGet(_asignaturas, this).length) : \"No tiene asignaturas matriculadas.\");\n    }\n  }]);\n}(_Persona_js__WEBPACK_IMPORTED_MODULE_0__.Persona);\n\n//# sourceURL=webpack://main/./js/Estudiante.js?");

/***/ }),

/***/ "./js/ListaEstudiantes.js":
/*!********************************!*\
  !*** ./js/ListaEstudiantes.js ***!
  \********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ListaEstudiantes: () => (/* binding */ ListaEstudiantes)\n/* harmony export */ });\n/* harmony import */ var _Estudiante_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Estudiante.js */ \"./js/Estudiante.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n\n\n/**\r\n * Clase que administra una lista de estudiantes.\r\n * @class\r\n */\nvar ListaEstudiantes = /*#__PURE__*/function () {\n  /**\r\n   * Crea una instancia de ListaEstudiantes.\r\n   */\n  function ListaEstudiantes() {\n    _classCallCheck(this, ListaEstudiantes);\n    this.listaEstudiantes = {};\n    this.idActual = 1;\n  }\n\n  /**\r\n   * Agrega un nuevo estudiante a la lista.\r\n   * @param {string} nombre - Nombre del estudiante.\r\n   * @param {number} edad - Edad del estudiante.\r\n   * @param {Direccion} direccion - Dirección del estudiante.\r\n   */\n  return _createClass(ListaEstudiantes, [{\n    key: \"agregarEstudiante\",\n    value: function agregarEstudiante(nombre, edad, direccion) {\n      var nuevoEstudiante = new _Estudiante_js__WEBPACK_IMPORTED_MODULE_0__.Estudiante(this.idActual, nombre, edad, direccion);\n      this.listaEstudiantes[this.idActual] = nuevoEstudiante;\n      console.log(\"Estudiante \".concat(nombre, \" a\\xF1adido con \\xE9xito.\"));\n      this.idActual++;\n    }\n\n    /**\r\n     * Elimina un estudiante de la lista por su ID.\r\n     * @param {number} id - ID del estudiante a eliminar.\r\n     * @throws {Error} Si el ID no es válido o el estudiante no existe.\r\n     */\n  }, {\n    key: \"eliminarEstudiante\",\n    value: function eliminarEstudiante(id) {\n      try {\n        if (isNaN(id)) throw new Error(\"ID inválido. Por favor, introduce un número válido.\");\n        var estudiante = this.listaEstudiantes[id];\n        if (!estudiante) throw new Error(\"No se encontr\\xF3 un estudiante con ID \".concat(id, \".\"));\n        estudiante.asignaturas.forEach(function (a) {\n          a.asignatura.eliminarEstudiante(estudiante);\n        });\n        delete this.listaEstudiantes[id];\n        console.log(\"Estudiante con ID \".concat(id, \" eliminado y desmatriculado de todas las asignaturas.\"));\n      } catch (error) {\n        console.error(\"Error al eliminar estudiante:\", error.message);\n      }\n    }\n\n    /**\r\n     * Muestra en consola todos los estudiantes registrados.\r\n     * @throws {Error} Si no hay estudiantes registrados.\r\n     */\n  }, {\n    key: \"mostrarEstudiantes\",\n    value: function mostrarEstudiantes() {\n      try {\n        var estudiantes = Object.values(this.listaEstudiantes);\n        if (estudiantes.length === 0) throw new Error(\"No hay estudiantes registrados.\");\n        console.log(\"Lista de estudiantes:\");\n        estudiantes.forEach(function (est) {\n          console.log(est.toString());\n          est.mostrarAsignaturas();\n        });\n      } catch (error) {\n        console.error(\"Error al mostrar estudiantes:\", error.message);\n      }\n    }\n\n    /**\r\n     * Calcula el promedio general de todos los estudiantes.\r\n     * @returns {string} Promedio general de calificaciones.\r\n     * @throws {Error} Si no hay estudiantes o calificaciones disponibles.\r\n     */\n  }, {\n    key: \"promedioGeneral\",\n    value: function promedioGeneral() {\n      try {\n        var estudiantesArray = Object.values(this.listaEstudiantes);\n        if (estudiantesArray.length === 0) throw new Error(\"No hay estudiantes registrados.\");\n        var promedios = estudiantesArray.map(function (est) {\n          return parseFloat(est.promedioIndividual());\n        }).filter(function (p) {\n          return !isNaN(p);\n        });\n        if (promedios.length === 0) throw new Error(\"No hay promedios disponibles para calcular.\");\n        var _promedioGeneral = (promedios.reduce(function (sum, val) {\n          return sum + val;\n        }, 0) / promedios.length).toFixed(2);\n        return _promedioGeneral;\n      } catch (error) {\n        console.error(\"Error al calcular promedio general de todos los estudiantes:\", error.message);\n      }\n    }\n\n    /**\r\n     * Busca una asignatura por su nombre en la lista de asignaturas disponibles.\r\n     * @param {string} nombreAsignatura - Nombre de la asignatura a buscar.\r\n     * @param {Array<Asignatura>} asignaturasDisponibles - Lista de asignaturas disponibles.\r\n     * @returns {Asignatura} Asignatura encontrada.\r\n     * @throws {Error} Si la asignatura no se encuentra en la lista.\r\n     * @throws {Error} Si no se proporciona un nombre de asignatura válido.\r\n     * @throws {Error} Si no hay asignaturas disponibles.\r\n     * @throws {Error} Si no se proporciona una lista de asignaturas.\r\n     **/\n  }, {\n    key: \"buscarAsignaturaPorNombre\",\n    value: function buscarAsignaturaPorNombre(nombreAsignatura, asignaturasDisponibles) {\n      var asignatura = asignaturasDisponibles.find(function (a) {\n        return a.nombre === nombreAsignatura;\n      });\n      if (!asignatura) {\n        throw new Error(\"Asignatura '\".concat(nombreAsignatura, \"' no encontrada.\"));\n      }\n      return asignatura;\n    }\n\n    /**\r\n     * Busca un estudiante por su nombre.\r\n     * @param {string} patron - Patrón o nombre a buscar.\r\n     * @returns {Estudiante|null} Estudiante encontrado o null si no se encuentra.\r\n     */\n  }, {\n    key: \"buscarEstudiantePorNombre\",\n    value: function buscarEstudiantePorNombre(patron) {\n      try {\n        // Imprime la lista de estudiantes para verificar que está correctamente cargada\n\n        // Convierte la lista de estudiantes en un array y filtra aquellos cuyo nombre coincide con el patrón\n        var resultados = Object.values(this.listaEstudiantes).filter(function (est) {\n          return est.nombre && est.nombre.toLowerCase().trim().includes(patron.toLowerCase().trim());\n        });\n\n        // Si no se encuentran coincidencias, muestra un mensaje de error y devuelve null\n        if (resultados.length === 0) {\n          console.error(\"No se encontraron estudiantes con el nombre: '\".concat(patron, \"'\"));\n          return null;\n        } else if (resultados.length > 1) {\n          // Si hay múltiples coincidencias, muestra los resultados y un mensaje de error\n          console.log(\"Se encontraron múltiples estudiantes:\");\n          resultados.forEach(function (est) {\n            return console.log(est.toString());\n          });\n          console.error(\"Por favor, especifica un nombre más preciso.\");\n          return null;\n        }\n\n        // Devuelve el estudiante encontrado si solo hay uno\n        return resultados[0];\n      } catch (error) {\n        // Maneja internamente cualquier error ocurrido durante la búsqueda\n        console.error(\"Error en la búsqueda del estudiante:\", error.message);\n        return null;\n      }\n    }\n  }]);\n}();\n\n//# sourceURL=webpack://main/./js/ListaEstudiantes.js?");

/***/ }),

/***/ "./js/Persona.js":
/*!***********************!*\
  !*** ./js/Persona.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Persona: () => (/* binding */ Persona)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _classPrivateFieldInitSpec(e, t, a) { _checkPrivateRedeclaration(e, t), t.set(e, a); }\nfunction _checkPrivateRedeclaration(e, t) { if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); }\nfunction _classPrivateFieldGet(s, a) { return s.get(_assertClassBrand(s, a)); }\nfunction _classPrivateFieldSet(s, a, r) { return s.set(_assertClassBrand(s, a), r), r; }\nfunction _assertClassBrand(e, t, n) { if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n; throw new TypeError(\"Private element is not present on this object\"); }\nvar _id = /*#__PURE__*/new WeakMap();\n/**\r\n * Clase que representa una persona.\r\n * @class\r\n */\nvar Persona = /*#__PURE__*/function () {\n  function Persona(id, nombre, edad, direccion) {\n    _classCallCheck(this, Persona);\n    /**\r\n     * Crea una instancia de Persona.\r\n     * @param {number} id - Identificador único de la persona.\r\n     * @param {string} nombre - Nombre de la persona.\r\n     * @param {number} edad - Edad de la persona.\r\n     * @param {Direccion} direccion - Dirección de la persona.\r\n     */\n\n    _classPrivateFieldInitSpec(this, _id, void 0);\n    _classPrivateFieldSet(_id, this, id);\n    this._nombre = nombre;\n    this._edad = edad;\n    this._direccion = direccion;\n  }\n\n  /**\r\n   * Obtiene el ID de la persona.\r\n   * @returns {number} ID de la persona.\r\n   */\n  return _createClass(Persona, [{\n    key: \"id\",\n    get: function get() {\n      return _classPrivateFieldGet(_id, this);\n    }\n\n    /**\r\n     * Obtiene el nombre de la persona.\r\n     * @returns {string} Nombre de la persona.\r\n     */\n  }, {\n    key: \"nombre\",\n    get: function get() {\n      return this._nombre;\n    }\n\n    /**\r\n     * Devuelve la representación en cadena de la persona.\r\n     * @returns {string} Representación en cadena de la persona.\r\n     */\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"ID: \".concat(_classPrivateFieldGet(_id, this), \", Nombre: \").concat(this.nombre, \", Edad: \").concat(this._edad, \", Direcci\\xF3n: \").concat(this._direccion);\n    }\n  }]);\n}();\n\n//# sourceURL=webpack://main/./js/Persona.js?");

/***/ }),

/***/ "./js/main.js":
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Direccion_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Direccion.js */ \"./js/Direccion.js\");\n/* harmony import */ var _Asignatura_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Asignatura.js */ \"./js/Asignatura.js\");\n/* harmony import */ var _Estudiante_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Estudiante.js */ \"./js/Estudiante.js\");\n/* harmony import */ var _ListaEstudiantes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ListaEstudiantes.js */ \"./js/ListaEstudiantes.js\");\n/**\r\n * 2. Definición de Clases\r\n * \r\n * En esta parte se importan las clases Direccion, Estudiante, Asignatura, ListaEstudiantes.\r\n * Todas las clases están en sus respecitivos archivos.\r\n */\n\n\n\n\n\n\n// Agregar estudiantes\nvar PlistaEstudiantes = new _ListaEstudiantes_js__WEBPACK_IMPORTED_MODULE_3__.ListaEstudiantes();\n\n// Crear asignaturas\nvar asignaturas = [];\n/**\r\n * Inicializa datos de prueba para la aplicación.\r\n */\nfunction inicializarDatosPrueba() {\n  console.log(\"Añadiendo datos de prueba...\");\n  console.log(\"-----------------------------------------------------------\");\n  var direccion1 = new _Direccion_js__WEBPACK_IMPORTED_MODULE_0__.Direccion(\"Calle Primavera\", 15, \"2A\", \"28010\", \"Madrid\", \"Madrid\");\n  var direccion2 = new _Direccion_js__WEBPACK_IMPORTED_MODULE_0__.Direccion(\"Calle Invierno\", 22, \"3B\", \"18012\", \"Granada\", \"Granada\");\n  var direccion3 = new _Direccion_js__WEBPACK_IMPORTED_MODULE_0__.Direccion(\"Calle Verano\", 5, \"1C\", \"41013\", \"Sevilla\", \"Sevilla\");\n  PlistaEstudiantes.agregarEstudiante(\"Daniel\", 20, direccion1);\n  PlistaEstudiantes.agregarEstudiante(\"Ana\", 22, direccion2);\n  PlistaEstudiantes.agregarEstudiante(\"Carlos\", 21, direccion3);\n  var estudiante1 = PlistaEstudiantes.listaEstudiantes[1];\n  var estudiante2 = PlistaEstudiantes.listaEstudiantes[2];\n  var estudiante3 = PlistaEstudiantes.listaEstudiantes[3];\n  var matematicas = new _Asignatura_js__WEBPACK_IMPORTED_MODULE_1__.Asignatura(\"Matemáticas\");\n  var fisica = new _Asignatura_js__WEBPACK_IMPORTED_MODULE_1__.Asignatura(\"Física\");\n  var literatura = new _Asignatura_js__WEBPACK_IMPORTED_MODULE_1__.Asignatura(\"Literatura\");\n  asignaturas.push(matematicas, fisica, literatura);\n  estudiante1.matricular(\"Matemáticas\", PlistaEstudiantes, asignaturas);\n  estudiante1.matricular(\"Física\", PlistaEstudiantes, asignaturas);\n  estudiante2.matricular(\"Matemáticas\", PlistaEstudiantes, asignaturas);\n  estudiante2.matricular(\"Literatura\", PlistaEstudiantes, asignaturas);\n  estudiante3.matricular(\"Física\", PlistaEstudiantes, asignaturas);\n  estudiante3.matricular(\"Literatura\", PlistaEstudiantes, asignaturas);\n\n  // Asignar notas a cada estudiante en sus asignaturas\n  matematicas.asignarNota(\"Daniel\", 8, PlistaEstudiantes);\n  matematicas.asignarNota(\"Ana\", 9, PlistaEstudiantes);\n  fisica.asignarNota(\"Daniel\", 7, PlistaEstudiantes);\n  fisica.asignarNota(\"Carlos\", 6, PlistaEstudiantes);\n  literatura.asignarNota(\"Ana\", 9, PlistaEstudiantes);\n  literatura.asignarNota(\"Carlos\", 7, PlistaEstudiantes);\n  console.log(\"Datos inicializados correctamente.\");\n  console.log(\"-----------------------------------------------------------\");\n}\ninicializarDatosPrueba();\n\n/**\r\n * Programa principal que muestra el menú y gestiona las interacciones.\r\n */\nfunction programa() {\n  var continuar = true;\n  while (continuar) {\n    // Mostrar Menú\n    console.log(\"=== Men\\xFA Principal ===\\n\" + \"1. A\\xF1adir estudiante\\n\" + \"2. Eliminar estudiante\\n\" + \"3. Mostrar estudiantes\\n\" + \"4. A\\xF1adir asignatura\\n\" + \"5. Mostrar asignaturas\\n\" + \"6. Matricular estudiante en asignatura\\n\" + \"7. Desmatricular estudiante de asignatura\\n\" + \"8. Asignar nota a un estudiante\\n\" + \"9. Calcular promedio de un estudiante\\n\" + \"10. Calcular promedio general de estudiantes\\n\" + \"0. Salir\\n\" + \"Escribe tu opci\\xF3n en la consola y presiona Enter: \\n\" + \"-----------------------------------------------------------\\n\");\n    var opcion = prompt(\"Introduce una opción:\");\n    switch (opcion) {\n      case \"1\":\n        /**\r\n        * Añade un nuevo estudiante solicitando nombre, edad y dirección.\r\n        */\n        var nombre = prompt(\"Nombre del estudiante:\");\n        var edad = parseInt(prompt(\"Edad del estudiante:\"), 10);\n        var direccion = prompt(\"Dirección del estudiante:\");\n        PlistaEstudiantes.agregarEstudiante(nombre, edad, direccion);\n        break;\n      case \"2\":\n        /**\r\n         * Elimina un estudiante de la lista solicitando su ID.\r\n         */\n        var idEliminar = parseInt(prompt(\"ID del estudiante a eliminar:\"), 10);\n        PlistaEstudiantes.eliminarEstudiante(idEliminar);\n        break;\n      case \"3\":\n        /**\r\n         * Muestra todos los estudiantes registrados junto con sus asignaturas.\r\n         */\n        PlistaEstudiantes.mostrarEstudiantes();\n        break;\n      case \"4\":\n        /**\r\n         * Añade una nueva asignatura al sistema.\r\n         */\n        var nombreAsignatura = prompt(\"Nombre de la asignatura:\");\n        asignaturas.push(new _Asignatura_js__WEBPACK_IMPORTED_MODULE_1__.Asignatura(nombreAsignatura));\n        console.log(\"Asignatura \".concat(nombreAsignatura, \" a\\xF1adida con \\xE9xito.\"));\n        break;\n      case \"5\":\n        /**\r\n         * Muestra todas las asignaturas disponibles y el número de estudiantes matriculados en cada una.\r\n         */\n        console.log(\"Lista de asignaturas:\");\n        asignaturas.forEach(function (a) {\n          return console.log(\"Asignatura: \".concat(a.nombre, \", Estudiantes matriculados: \").concat(a.listaEstudiantes.length));\n        });\n        break;\n      case \"6\":\n        /**\r\n         * Matricula a un estudiante en una asignatura.\r\n         * Solicita el nombre del estudiante y de la asignatura.\r\n         */\n        var nombreEstudiante = prompt(\"Introduce el nombre del estudiante:\");\n        var estudianteMatricular = PlistaEstudiantes.buscarEstudiantePorNombre(nombreEstudiante);\n        if (estudianteMatricular) {\n          var nombreAsignaturaMat = prompt(\"Introduce el nombre de la asignatura:\");\n          estudianteMatricular.matricular(nombreAsignaturaMat, PlistaEstudiantes, asignaturas);\n        }\n        break;\n      case \"7\":\n        /**\r\n         * Desmatricula a un estudiante de una asignatura.\r\n         * Solicita el nombre del estudiante y de la asignatura.\r\n         */\n        var nombreEstudianteDes = prompt(\"Introduce el nombre del estudiante que desea desmatricular:\");\n        var estudianteDesmatricular = PlistaEstudiantes.buscarEstudiantePorNombre(nombreEstudianteDes);\n        if (estudianteDesmatricular) {\n          var nombreAsignaturaDes = prompt(\"Introduce el nombre de la asignatura de la que se desea desmatricular al estudiante:\");\n          estudianteDesmatricular.desmatricular(nombreAsignaturaDes, PlistaEstudiantes, asignaturas);\n        }\n        break;\n      case \"8\":\n        /**\r\n         * Asigna una nota a un estudiante en una asignatura específica.\r\n         * Solicita el nombre del estudiante, el nombre de la asignatura y la nota.\r\n         */\n        var nombreEstNota = prompt(\"Nombre del estudiante:\");\n        var nombreAsigNota = prompt(\"Nombre de la asignatura:\");\n        var nota = parseFloat(prompt(\"Introduce la nota (0-10):\"));\n        var asignatura = PlistaEstudiantes.buscarAsignaturaPorNombre(nombreAsigNota, asignaturas);\n        if (asignatura) {\n          asignatura.asignarNota(nombreEstNota, nota, PlistaEstudiantes);\n        }\n        break;\n      case \"9\":\n        /**\r\n         * Calcula y muestra el promedio de calificaciones de un estudiante.\r\n         * Solicita el ID del estudiante.\r\n         */\n        var idEstPromedio = parseInt(prompt(\"ID del estudiante:\"), 10);\n        var estudiantePromedio = PlistaEstudiantes.listaEstudiantes[idEstPromedio];\n\n        //Calculamos el promedio del estudiante\n        var mediaEst = estudiantePromedio.promedioIndividual();\n        console.log(\"El promedio de \".concat(estudiantePromedio.nombre, \" es: \").concat(mediaEst));\n        break;\n      case \"10\":\n        /**\r\n         * Calcula y muestra el promedio general de todos los estudiantes registrados.\r\n         */\n        var promedioGeneral = PlistaEstudiantes.promedioGeneral();\n        console.log(\"Promedio general de todos los estudiantes: \".concat(promedioGeneral));\n        break;\n      case \"0\":\n        /**\r\n         * Finaliza la ejecución del programa.\r\n         */\n        console.log(\"Saliendo del programa...\");\n        continuar = false;\n        break;\n      default:\n        /**\r\n         * Muestra un mensaje de error si la opción ingresada no es válida.\r\n         */\n        console.log(\"Opción no válida. Por favor, introduce un número entre 0 y 10.\");\n    }\n  }\n}\n\n// Ejecutar el programa\nprograma();\n\n//# sourceURL=webpack://main/./js/main.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./js/main.js");
/******/ 	
/******/ })()
;